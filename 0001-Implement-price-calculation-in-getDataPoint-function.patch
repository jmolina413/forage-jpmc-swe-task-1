From 33cb67e377a2ff30ebdf1a739dc8f2744b5f9752 Mon Sep 17 00:00:00 2001
From: Jonathan <jbmolona413@gmail.com>
Date: Wed, 3 Jan 2024 21:38:22 -0600
Subject: [PATCH] Implement price calculation in getDataPoint function:

Updated the getDataPoint function to calculate the average price of a stock based on its bid and ask prices. This change ensures that the function returns a tuple with the correct stock information. This includes the newly calculated average price.

Updated the client_test.py file to have more unit tests that involve bids lower than ask or whenever the bid is 0. Also included two getRatio tests that have when the ratio is dividing by zero and when teh numerator is 0.
---
 client_test.py | 39 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 37 insertions(+), 2 deletions(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..75dcfff 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,11 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        stock, bid_price, ask_price, price =getDataPoint(quote)
+        expected_price = (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+        self.assertEqual(price, expected_price)
+
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,11 +20,41 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+        stock, bid_price, ask_price, price =getDataPoint(quote)
+        expected_price = (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+        self.assertEqual(price, expected_price)
 
   """ ------------ Add more unit tests ------------ """
+  def test_getDataPoint_calculatePriceBidLowerThanAsk(self):
+    quotes = [
+      {'top_ask': {'price': 118.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        stock, bid_price, ask_price, price =getDataPoint(quote)
+        expected_price = (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+        self.assertEqual(price, expected_price)
+
+  def test_getDataPoint_with_zero_bid_ask_prices(self):
+    quotes = [
+      {'top_ask': {'price': 111.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 118.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 101.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 119.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        stock, bid_price, ask_price, price =getDataPoint(quote)
+        expected_price = (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+        self.assertEqual(price, expected_price)
 
+  def test_getRatio_divide_by_zero(self):
+      # I tested the getRatio when dividing by zero
+      self.assertIsNone(getRatio(100, 0))
 
+  def test_getRatio_zero_numerator(self):
+      # I tested getRatio when the first price is zero
+      self.assertEqual(getRatio(0, 100), 0)
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.37.1 (Apple Git-137.1)

